package com.minis.aop.springframework.aop;

import java.lang.reflect.Method;
/**
 * TODO: Part of a {@link Pointcut}: Checks whether the target method is eligible for advice.
 *  是 Pointcut 的一部分，用于匹配方法，决定是否对某个方法应用增强逻辑
 * <p>A MethodMatcher may be evaluated <b>statically</b> or at <b>runtime</b> (dynamically).
 * Static matching involves method and (possibly) method attributes. Dynamic matching
 * also makes arguments for a particular call available, and any effects of running
 * previous advice applying to the joinpoint.
 *
 * <p>Concrete implementations of this interface typically should provide proper
 * implementations of {@link Object#equals(Object)} and {@link Object#hashCode()}
 * in order to allow the matcher to be used in caching scenarios &mdash; for
 * example, in proxies generated by CGLIB.
 *
 * @author Rod Johnson
 * @since 11.11.2003
 * @see Pointcut
 */
public interface MethodMatcher {
    /**
     * Perform static checking whether the given method matches.
     * @param method the candidate method
     * @param targetClass the target class
     * @return whether or not this method matches statically
     */
    boolean matches(Method method, Class<?> targetClass);
}
